-- SQL 고득점 Kit : GROUP BY

-- 01 저자 별 카테고리 별 매출액 집계하기
SELECT a.AUTHOR_ID, a.AUTHOR_NAME, b.CATEGORY, SUM(s.SALES * b.PRICE) AS TOTAL_SALES
FROM BOOK b
    JOIN AUTHOR a ON a.AUTHOR_ID = b.AUTHOR_ID
    JOIN BOOK_SALES s ON s.BOOK_ID = b.BOOK_ID
WHERE DATE_FORMAT(s.sales_date, '%Y-%m') = '2022-01'
GROUP BY a.AUTHOR_ID, b.CATEGORY
ORDER BY a.AUTHOR_ID, b.CATEGORY DESC;


-- 02 성분으로 구분한 아이스크림 총 주문량
SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) AS TOTAL_ORDER
FROM FIRST_HALF f
    JOIN ICECREAM_INFO i ON i.FLAVOR = f.FLAVOR
GROUP BY INGREDIENT_TYPE
ORDER BY TOTAL_ORDER;


-- 03 카테고리 별 도서 판매량 집계하기
SELECT CATEGORY, SUM(s.SALES) AS TOTAL_SALES
FROM BOOK b
    JOIN BOOK_SALES s ON b.BOOK_ID = s.BOOK_ID
WHERE DATE_FORMAT(SALES_DATE, '%Y-%m') = '2022-01'
GROUP BY CATEGORY
ORDER BY CATEGORY;


-- 04 조건에 맞는 사용자와 총 거래금액 조회하기
SELECT U.USER_ID, U.NICKNAME, SUM(B.PRICE) AS TOTAL_SALES
FROM USED_GOODS_BOARD B
    JOIN USED_GOODS_USER U ON B.WRITER_ID = U.USER_ID
WHERE B.STATUS = 'DONE'
GROUP BY U.USER_ID, U.NICKNAME
HAVING TOTAL_SALES >= 700000
ORDER BY TOTAL_SALES;


-- 05 즐겨찾기가 가장 많은 식당 정보 출력하기
SELECT FOOD_TYPE, REST_ID, REST_NAME, FAVORITES
FROM REST_INFO A
WHERE FAVORITES = (SELECT MAX(B.FAVORITES) FROM REST_INFO B WHERE A.FOOD_TYPE = B.FOOD_TYPE)
GROUP BY FOOD_TYPE
ORDER BY FOOD_TYPE DESC;


-- 06 진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD AS '진료과코드', COUNT(*) AS '5월예약건수'
FROM APPOINTMENT
WHERE DATE_FORMAT(APNT_YMD, '%Y-%m') = '2022-05'
GROUP BY MCDP_CD
ORDER BY 5월예약건수, MCDP_CD;
--- ORDER BY '5월예약건수', '진료과코드'; -> 틀림


-- 07 대여 횟수가 많은 자동차들의 월별 대여 횟수 구하기
SELECT DATE_FORMAT(START_DATE, '%m') AS MONTH, CAR_ID, COUNT(CAR_ID) AS RECORDS
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY A
WHERE
    DATE_FORMAT(START_DATE, '%Y-%m') BETWEEN '2022-08' AND '2022-10' AND
    (SELECT COUNT(CAR_ID)
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY B
    WHERE
        DATE_FORMAT(START_DATE, '%Y-%m') BETWEEN '2022-08' AND '2022-10' AND
        A.CAR_ID = B.CAR_ID
    GROUP BY CAR_ID) >= 5
GROUP BY MONTH, CAR_ID
ORDER BY MONTH, CAR_ID DESC;


-- 08 식품분류별 가장 비싼 식품의 정보 조회하기
SELECT CATEGORY, PRICE AS MAX_PRICE, PRODUCT_NAME
FROM FOOD_PRODUCT A
WHERE
    CATEGORY IN ('과자', '국', '김치', '식용유') AND
    PRICE = (
        SELECT MAX(PRICE)
        FROM FOOD_PRODUCT B
        WHERE A.CATEGORY = B.CATEGORY
        GROUP BY CATEGORY
    )
GROUP BY CATEGORY
ORDER BY MAX_PRICE DESC;


-- 09 자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE, COUNT(*) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE
    OPTIONS LIKE '%통풍시트%' OR
    OPTIONS LIKE '%열선시트%' OR
    OPTIONS LIKE '%가죽시트%'
GROUP BY CAR_TYPE
# HAVING CARS >= 1
ORDER BY CAR_TYPE;


-- 10 자동차 대여 기록에서 대여중 / 대여 가능 여부 구분하기
SELECT
    DISTINCT A.CAR_ID,
    IF (B.CAR_ID IS NOT NULL, '대여중', '대여 가능') AS AVAILABILITY
FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY A
LEFT JOIN
    (SELECT DISTINCT CAR_ID
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    WHERE '2022-10-16' BETWEEN START_DATE AND END_DATE) B
    ON A.CAR_ID = B.CAR_ID
ORDER BY A.CAR_ID DESC


-- 11 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(*) AS 'count'
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE;


-- 12 동명 동물 수 찾기
SELECT NAME, COUNT(*) AS 'COUNT'
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME) > 1
ORDER BY NAME;


-- 13 입양 시각 구하기(1)
SELECT HOUR(DATETIME) AS HOUR, COUNT(*) AS 'COUNT'
FROM ANIMAL_OUTS
WHERE HOUR(DATETIME) BETWEEN 9 AND 19
GROUP BY HOUR
ORDER BY HOUR;


-- 14 년, 월, 성별 별 상품 구매 회원 수 구하기
SELECT YEAR(SALES_DATE) AS YEAR, MONTH(SALES_DATE) AS MONTH, GENDER, COUNT(DISTINCT O.USER_ID) AS USERS
FROM ONLINE_SALE O
    LEFT JOIN USER_INFO U ON O.USER_ID = U.USER_ID
WHERE GENDER IS NOT NULL
GROUP BY YEAR, MONTH, GENDER
ORDER BY YEAR, MONTH, GENDER


-- 15 입양 시각 구하기(2)
WITH RECURSIVE CTE AS (
    SELECT 0 AS N
    UNION ALL
    SELECT N + 1 FROM CTE WHERE N < 23
)

SELECT CTE.N AS HOUR, COUNT(ANIMAL_ID) AS 'COUNT'
FROM CTE
    LEFT JOIN ANIMAL_OUTS ON HOUR(DATETIME) = CTE.N
GROUP BY HOUR
ORDER BY HOUR;


-- 16 가격대 별 상품 개수 구하기
SELECT FLOOR(PRICE / 10000) * 10000 AS PRICE_GROUP, COUNT(*) AS PRODUCTS
FROM PRODUCT
GROUP BY PRICE_GROUP
ORDER BY PRICE_GROUP;